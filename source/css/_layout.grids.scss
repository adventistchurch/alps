/*------------------------------------*\
    $GRIDS
\*------------------------------------*/

/**
 * Grid Container
 */
.g {
  //overflow: hidden;
}

/**
 * Grid Item
 */
.gi {
  width: 100%;
  img {
    display: block;
  }
  > * {
    width: 100%;
  }
  @include media('>medium') {
    &.left-gutter--l { padding-left: rem(30); }
    &.right-gutter--l { padding-right: rem(30); }
    &.left-gutter--xl { padding-left: rem(60); }
    &.right-gutter--xl { padding-right: rem(60); }
  }
}

/**
 * Flip column order
 */
.flip-columns {
  @include media('>medium') {
    & > .gi:nth-child(1) {
      order: 2;
    }
    & > .gi:nth-child(2) {
      order: 1;
    }
  }
}

/**
 * Grid Item Held - Check the specific grids below for how long it's held.
 */
@mixin gi-hold {
  width: 100%;
  float: none;
  clear: both;
}

/**
 * Grid Uniform - For grids that should line up evenly (these grids should not
 * use <hr>'s to separate individual grid items).
 */
.grid--uniform {
  > .gi {
    border-bottom: $border-style-light;
  }
}

/**
 * Grid 1up
 */
.g-1up {
  .gi {
    width: 100%;
  }
}

/**
 * Grid 2up at medium width.
 */
.g-2up--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    > .gi {
      float: left;
      width: 50%;
      align-items: stretch;
      display: flex;
      margin-top: 0;
      * { // Slick slider hack for when a carousel is contained within a flexed element.
        min-height: 0;
        min-width: 0;
      }
    }
    &.with-divider {
      > .gi:nth-child(odd) {
        position: relative;
        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 3up at medium width.
 */
.g-3up--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    > .gi {
      float: left;
      width: 33.3333%;
      align-items: stretch;
      display: flex;
      margin-top: 0;
      * { // Slick slider hack for when a carousel is contained within a flexed element.
        min-height: 0;
        min-width: 0;
      }
    }
    &.with-gutters {
      > .gi:nth-child(3n+1) {
        padding-right: $pad;
      }
      > .gi:nth-child(3n+2) {
        padding-left: $pad-half;
        padding-right: $pad-half;
      }
      > .gi:nth-child(3n+3) {
        padding-left: $pad;
      }
    }
    &.with-divider {
      > .gi:nth-child(3n+1), > .gi:nth-child(3n+2) {
        position: relative;
        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 2up at medium width with 70/30 split.
 */
.g-2up--70-30--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    > .gi {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;
      * { // Slick slider hack for when a carousel is contained within a flexed element.
        min-height: 0;
        min-width: 0;
      }
      &:first-child {
        width: 70%;
      }
      &:last-child {
        width: 30%;
      }
    }
  }
}

/**
 * Grid 2up at medium width with 35/65 split.
 */
.g-2up--35-65--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    > .gi {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;
      &:first-child {
        width: 35%;
      }
      &:last-child {
        width: 65%;
      }
    }
  }
}


/**
 * Grid always 2 columns even
 */
.g-2-split {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  > .gi {
    float: left;
    width: 50%;
    display: flex;
    flex-wrap: wrap;
    margin-top: 0;
  }
}


/**
 * Grid 4up
 */
.g-4up {
  > .gi {
    margin-bottom: $space;
  }
  @include mq($px450) {
    display: flex;
    margin-left: -$pad-half;
    margin-right: -$pad-half;
    align-items: flex-start;
    justify-content: center;
    flex-wrap: wrap;
    > .gi {
      float: left;
      padding-left: $pad-half;
      padding-right: $pad-half;
      width: 50%;
      display: flex;

    }
  }
  @include mq($px800) {
    > .gi {
      width: 25%;
      margin-bottom: $space-double;
    }
  }
}
