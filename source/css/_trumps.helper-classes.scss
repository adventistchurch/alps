/*------------------------------------*\
    $HELPER/TRUMP CLASSES
\*------------------------------------*/

/**
 * Clearfix - extends outer container with floated children.
 */
.cf {
  zoom: 1;
}
.cf:before, .cf:after {
  content: " "; // 1
  display: table; // 2
}
.cf:after {
  clear: both;
}

/**
 * Completely remove from the flow and screen readers.
 */
.is-hidden {
  display: none !important;
  visibility: hidden !important;
}
.hide {
  display: none;
}

/**
 * Right to left languages
 */
.rtl {
  direction: rtl;
  unicode-bidi: bidi-override;
}

/**
 * Clear Floats
 */
.cb {
  clear: both;
}
.cl {
  clear: left;
}
.cr {
  clear: right;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */
.is-vishidden,
.screen-reader-text,
.sr-only {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
}

/**
 * Hide elements only present and necessary for js enabled browsers.
 */
.no-js .no-js-hide {
  display: none;
}

/**
 * Show only for touch devices.
 */
.t-show {
  display: none;
}
.touchevents .t-show {
  display: inline-block;
}

/**
 * Inner wrapper for images to adjust off line-height.
 */
.img-inner {
  line-height: 0;
  display: block;
}
.img-wrap {
  margin-bottom: rem(5);
  position: relative;
  overflow: hidden;
  img,
  picture {
    display: block;
  }
}

/**
 * Stretch media full browser width.
 */
.breakout {
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
  img {
    width: 100%;
    width: 100vw;
  }
}

/**
 * Floats
 */
.right {
  float: right;
}
.left {
  float: left;
}

/**
 * Positioning
 */
.rel {
  position: relative;
}
.abs {
  position: absolute;
}
.abs--at-large {
  @include mq($large) {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    z-index: 100;
  }
}
.fixed {
  position: fixed;
}

/**
 * Alignment
 */
.center-block {
  @include center-block;
}
.va--top {
  vertical-align: top;
}
.va--ttop {
  vertical-align: text-top;
}
.va--btm {
  vertical-align: bottom;
}
.va--tbtm {
  vertical-align: text-bottom;
}
.va--middle {
  vertical-align: middle;
}
.va--sub {
  vertical-align: sub;
}
.vh-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
 * Transforms
 */
.rotate--90 {
  @include transform(rotate(90deg));
}
.rotate--180 {
  @include transform(rotate(180deg));
}

/**
 * Round Element
 */
.round {
  overflow: hidden;
  border-radius: 100%;
}
.rounded {
  border-radius: 5px;
  overflow: hidden;
}
.br--none {
  border-radius: 0;
}

/**
 * Background Covered
 */
.bg--cover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

/**
 * Path Fills
 */
.pf--white {
  path {
    fill: $white;
  }
}
.pf--black {
  path {
    fill: $black;
  }
}
.pf--gray-light {
  path {
    fill: $gray-light;
  }
}
.pf--red {
  path {
    fill: $red;
  }
}

/**
 * Arrows
 */
.arrow {
  width: 0;
  height: 0;
  display: inline-block;
}
.arrow--up {
  border-left: rem(5) solid transparent;
  border-right: rem(5) solid transparent;
  border-bottom: rem(5) solid $black;
}
.arrow--down {
  border-left: rem(5) solid transparent;
  border-right: rem(5) solid transparent;
  border-top: rem(5) solid $black;
}
.arrow--right {
  border-top: rem(5) solid transparent;
  border-bottom: rem(5) solid transparent;
  border-left: rem(5) solid $black;
}
.arrow--left {
  border-top: rem(5) solid transparent;
  border-bottom: rem(5) solid transparent;
  border-right: rem(5) solid $black;
}
.arrow--small {
  border-width: 5px;
}

/**
 * Box Shadow Styles - the naming conventions here are a little funny since the
 * box-shadow styles can't be separated out.
 */
.shadow {
  box-shadow: 0 0 4px rgba($black, .5);
}
.shadow--l-btm-light {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
}

/**
 * Flexbox
 */
.flex {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  > .block {
    width: 100%;
  }
}
.fb--100 {
  flex-basis: 100%;
}
.flex--end {
  align-self: flex-end;
}
.flex--wrap {
  flex-wrap: wrap;
}
.flex--nowrap {
  flex-wrap: nowrap;
}
.flex--align-center {
  align-items: center;
}
.flex--align-end {
  align-items: flex-end;
}
.flex--justify-center {
  justify-content: center;
}
.flex--justify-between {
  justify-content: space-between;
}

/**
 * Max/min-widths/heights
 */
.mw--100 {
  max-width: rem(100);
}
.mw--300 {
  max-width: rem(300);
}
.mw--400 {
  max-width: rem(400);
}
.mw--500 {
  max-width: rem(500);
}
.mw--700 {
  max-width: rem(700);
}
.no-mh {
  min-height: 0;
}

/**
 * Viewport Heights
 */
.vh--100 {
  height: 100vh;
}

/**
 * Z-Index
 */
.z-10 {
  z-index: 10;
}
.z-100 {
  z-index: 100;
}
.z-1000 {
  z-index: 1000;
}

/**
 * Gradients
 */
.max-grad {
  @include mq($px600, max) {
    max-height: rem(500);
    overflow: hidden;
    @include bg-gradient(250, auto, 0, rgba($white, 0), $white);
  }
}
.grad--btm {
  @include bg-gradient(100, auto, 0, rgba($black, 0), $black);
}

/**
 * Modal
 */
.modal {
  z-index: 91000030;
}
.overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: 91000010; // Appear over ads
  display: none;
  background-color: rgba($white, .9);
}
.icon__close {
  right: rem(15);
  top: rem(15);
  z-index: 1000020;
  position: absolute;
}
.overlay-close {
  background-image: url('../designimages/x.svg');
  background-repeat: no-repeat;
  background-position: center center;
  cursor: pointer;
  z-index: 1000020;
  top: $space;
  right: $space;
  position: fixed;
  opacity: .7;
}

/**
 * Misc
 */
.ovh {
  overflow: hidden;
}

.w--100p {
  width: 100%;
}
.h--100p {
  height: 100%;
}
.flex.h--100p {
  flex-direction: column;
}
.no-min-h {
  min-height: 0;
}

/**
 * Example purposes for pattern.
 */
.breakout-image {
  min-height: rem(300);
  @include mq($large) {
    min-height: rem(400);
  }
}
